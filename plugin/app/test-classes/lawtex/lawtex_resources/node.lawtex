template[TEMP_TemplateAlias] {
	metainfo {
		language = "pt_BR"
		description = "..."
		tags {
			"...", "..."
		}
		declarations {
			&<place> : String {
				name = "Lugar"
				request = "Qual o local do documento?"
				default = here()
			},
			&<date> : Date {
				name = "Data"
				request = "Qual a data do documento?"
				default = now()
			}
		}
	}
	head {
		title = "..."
		operations {
			use *period[PER_Global__t],
			use loop[LOOP_Local__t]
		}
 	}
 	body {
		declarations {
			+<variableAlias> : Integer {
				name = "..."
				request = "..."
				default = "..."
				help = "..."
				tip = "..."
			}
		}
		operations {
			use *dependency[DEP_Global__t]
		}
 	}
}

*period[PER_Global__t] {
	name = "..."
	description = "..."
	tags {
		"...", "..."
	}
	declarations {
		+<variableAlias> : String {
			name = "..."
			request = "..."
			default = "..."
			help = "..."
			tip = "..."
		}
	}
	operation {
		print {
			[version = "..."],
			[version = "...", name = "Pero Vaz de Caminha"]
		}
	}
}

loop[LOOP_Local__t] {
	name = "..."
	description = "..."
	separator = "%f1; %s2; %p2; e %l2."
	tags {
		"...", "..."
	}
	declarations {
		+|vectorAlias| : Vector[*String] {
			name = "..."
			request = "..."
		}
	}
	operation {
		foreach (<elem> IN |vectorAlias| ) { /* : <elem>.mandatory == "+" */
			use *period[PER_Global__t] where ( <variableAlias> = <elem> )
		}
	}
}

*dependency[DEP_Global__t] {
	name = "..."
	description = "..."
	tags {
		"...", "..."
	}
	declarations {
		+<variableAlias> : externs Integer
	}
	operation {
		if ( NOT <variableAlias>.isEmpty() ) {
 			print {
 				[version = "..." & <variableAlias>]
 			}
		}
	}
}

topic[TOP_Local__t] {
	name = "..."
	description = "..."
	title = "..."
	tags {
		"...", "..."
	}
	declarations {
		+<varListAlias> : List("1","2","3","4") {
			name = "..."
			request = "..."
			atomic = true
			help = "..."
			tip = "..."
		}
	}
	operations {
		use *dependency[DEP_Global__t] where ( <variableAlias> : <varListAlias> )
	}
}

*branch[BRC_Global__t] {
	name = "..."
	description = "..."
	tags {
		"...", "..."
	}
	operations {
		use topic[TOP_Local__t]
	}
}