*topic[TOP_NODETopicExterns] {
	title = "Topic Extern"
	declarations {
		+<objectExterns> : externs *StructNodeExterns,
		+<variableExterns> : externs String
	}
	operations {
			use *period[PER_NODEPeriodExterns] where ( <innerObject> : <objectExterns> ),
			use *period[PER_NODEPeriodExterns] where ( <innerObject> : <objectExterns> ),
			print {
				version = "zeca urubu" & <variableExterns>
			}
	}
}

*period[PER_NODEPeriodExterns] {
	name = "Period Externs"
	declarations {
		+<innerObject> : externs *StructNodeExterns,
		-<variableInner> : Integer {
			request = "Entre com um inteiro."
		}
	}
	operation {
		print {
			[version = "... " & <innerObject.fieldStrExtern> & " ... >> " & <innerObject.fieldIntExtern>],
			[version = "Field: " & <innerObject.fieldStrExtern>, name = "Pero Vaz de Caminha"]
		}
	}
}

*struct[StructNodeExterns] {
	fields {
		+[fieldStrExtern] : String {
			name = "field String"
		},
		&[fieldIntExtern] : Integer {
			name = "field Integer"
		}
	}
}

*loop[LOOP_NODELoopExterns] {
	separator = "%f1; %s2; %p2; e %l2."
	declarations {
		+<objectExterns> : externs *StructNodeExterns,
		+|vectorAlias| : Vector[Time] {
			request = "Dados do vetor"
		}
	}
	operation {
		foreach (<elem> IN |vectorAlias|) {
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> ),
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> )
		}
	}
}

*dependency[DEP_NODEDependencyExterns] {
	name = "Dependency Externs"
	declarations {
		+<objectExterns> : externs *StructNodeExterns,
		+<variableAlias> : String {
			request = "STR?"
		}
	}
	operation {
		if ( <objectExterns>.isEmpty() ) {
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> ),
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> ),
			use period[PER_NODEPeriodExternsLocal] where ( <innerObject> = <objectExterns>, <variableInner> = 4 * 3 + 2 * 9),
			use *topic[TOP_NODETopicExterns] where (<variableExterns> = <string>)
		} else {
			print {
				version = "FORA DILMA!"
			},
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> ),
			use *period[PER_NODEPeriodExterns] where ( <innerObject> = <objectExterns> ),
			use period[PER_NODEPeriodExternsLocal] where ( <innerObject> = <objectExterns>, <variableInner> = 4 )
		}
	}
}

period[PER_NODEPeriodExternsLocal] {
	name = "Period Externs"
	declarations {
		+<innerObject> : externs *StructNodeExterns,
		-<variableInner> : Integer {
			request = "Entre com um inteiro."
		}
	}
	operation {
		print {
			[version = "... " & <innerObject.fieldStrExtern> & " ... >> " & <innerObject.fieldIntExtern>],
			[version = "Field: " & <innerObject.fieldStrExtern>, name = "Pero Vaz de Caminha"]
		}
	}
}