template[TEMP_DatePagination] {
	metainfo {
		name = "Sincronização dos dados do Bi Telecom"
	}
 	body {
 		declarations{
			+<index_id> : String,
 			+<operator>:struct[StructDateOperator] {
 				fields {
 					+[start] : DateTime,
 					+[end] : DateTime
 				}
 			},
 			-<statTuple> :struct[DocumentInfo] {
				fields {
					+[procedimentoComumOuJEC] : String,
					+[uf] : String,
					+[cidade] : String,
					+[tipoDeSujeito] : String,
					+[houvePedidoJusticaGratuita] : Boolean,
					+|elementosAusenciasPressupostosLegais| : Vector[String],
					+[resolvidoAdministrativamente] : Boolean,
					+|listaProdutos| : Vector[String],
					+[querFazerImpugnacaoAdicional] : Boolean,
					+|listaAlegacoesMerito| : Vector[String],
					+|pedidos| : Vector[String],
					//DOCUMENT INFO
					+[name] : String,
					+[uid] : String,
					+[author] : String,
					+[state] : String,
					+[modified] : String,
					+[created] : String
				}
			},
 			-|vectorDocument| : Vector[Document[TEMP_Contestacao_Telefonia_ClientesBertolami]],
 			-<pages> : Integer
 		}
		operations {
                <index_id>.ask(),
                logger("Iniciando sincronização dos documentos desde as datas "&<operator.start>&" ate "&<operator.end>&"\n"),
				<pages>=|vectorDocument|.readDocumentsPages(<operator.start>,<operator.end>),
				foreach(<i> IN [0:<pages>]) {
					|vectorDocument|.readDocuments(<operator.start>,<operator.end>,<i>),
					logger("Iniciando sincronização de "&|vectorDocument|.size()&" documentos..."),
				     foreach(<doc> IN |vectorDocument|) {
						<statTuple.procedimentoComumOuJEC> =
							<doc$Metainfo:dadosDoProcesso.procedimentoComumOuJEC>.resolveDocInner(),
	 					<statTuple.uf> =
	 						<doc$Metainfo:dadosDoProcesso.uf>.resolveDocInner(),
	 					<statTuple.cidade> =
							<doc$Metainfo:dadosDoProcesso.cidade>.resolveDocInner(),
						<statTuple.tipoDeSujeito> =
							<doc$FRM_Contestacao_TelefoniaBertolami:parteAutora{0}.tipoDeSujeito>.resolveDocInner(),
						<statTuple.houvePedidoJusticaGratuita> =
							<doc$FRM_Contestacao_TelefoniaBertolami:parteAutora{0}.houvePedidoJusticaGratuita>.resolveDocInner(),
						<statTuple.elementosAusenciasPressupostosLegais> =
							<doc$FRM_Contestacao_TelefoniaBertolami:parteAutora{0}.elementosAusenciasPressupostosLegais>.resolveDocInner(),
						<statTuple.resolvidoAdministrativamente> =
							<doc$FRM_Contestacao_TelefoniaBertolami:preliminares.resolvidoAdministrativamente>.resolveDocInner(),
						<statTuple.listaProdutos> =
							<doc$FRM_Contestacao_TelefoniaBertolami:produtos.listaProdutos>.resolveDocInner(),
						<statTuple.querFazerImpugnacaoAdicional> =
							<doc$FRM_Contestacao_TelefoniaBertolami:impugnacaoAdicional.querFazerImpugnacaoAdicional>.resolveDocInner(),
						<statTuple.listaAlegacoesMerito> =
							<doc$FRM_Contestacao_TelefoniaBertolami:alegacoesDeMerito.listaAlegacoesMerito>.resolveDocInner(),
						<statTuple.pedidos> =
							<doc$FRM_Contestacao_TelefoniaBertolami:pedidos>.resolveDocInner(),
						<statTuple>.documentInfo(<doc>),
						<statTuple>.stats(<statTuple.uid>,<index_id>)
			 		},
			 		logger("Sincronização dos "&|vectorDocument|.size()&" finalizada."&"\n"),
					|vectorDocument|.clear()
			},
			logger("Sincronização dos documentos desde as datas "&<operator.start>&" ate "&<operator.end>&" finalizada.\n")
		}

 	}
}